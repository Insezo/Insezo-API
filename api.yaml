openapi: 3.0.1
info:
  title: Insezo partner API
  description: |
    API endpoints for Insezo partners. (customers,companies and technicians)

    # Url

    Base url production: https://rest.insezo.com

    Base url development: https://rest.insezodevelopment.com

    # Authentication

    Insezo currently offers one form of authentication:
      - API Key - You can find this when logged in on app.insezo.com in the menu under "company settings"

    Just add a Authorization header with value "Bearer {YOUR_KEY}"

    <SecurityDefinitions />
  version: "1.0.1"
  x-logo:
    url: "https://app.insezo.com/img/main_logo.png"
    altText: "Insezo"
    href: "https://www.insezo.com"
servers:
  - url: https://rest.insezo.com
    description: Production server (uses live data)
tags:
  - name: Tasks
    description: Everything about tasks
  - name: Products
    description: Everything about products
  - name: Parts
    description: Everything about parts
  - name: Stock
    description: Everything about stock
  - name: Relations
    description: Everything about relations
  - name: Returns
    description: Everything about return tasks
  - name: Fulfilment
    description: Everything about fulfilment
  - name: Registration - Complaints
    description: Everything about complaint registrations
  - name: Registration - Products
    description: Everything about product registrations
  - name: Bulk
    description: Bulk actions for resources
  - name: Reviews
    description: Everything about reviews for tasks
  - name: Me
    description: Information about company account
  - name: Webhooks
    description: Information about Webhooks
  - name: Meta
    description: Information about Meta
paths:
  /tasks/{taskNumber}:
    $ref: "./paths/tasks{id}.yaml"
  /tasks:
    $ref: "./paths/tasks.yaml"
  /tasks/free:
    $ref: "./paths/tasksFree.yaml"
  /tasks/combi:
    $ref: "./paths/tasksCombi.yaml"
  /tasks/{taskNumber}/phase:
    $ref: "./paths/tasks{id}Phase.yaml"
  /tasks/{taskNumber}/document:
    $ref: "./paths/tasks{id}Document.yaml"
  /tasks/{taskNumber}/technician/company:
    $ref: "./paths/tasks{id}TechnicianCompany.yaml"
  /tasks/{taskNumber}/appointment:
    $ref: "./paths/tasks{id}Appointment.yaml"
  /tasks/{taskNumber}/finish:
    $ref: "./paths/tasks{id}Finish.yaml"
  /products:
    $ref: "./paths/products.yaml"
  /products/{productId}:
    $ref: "./paths/products{id}.yaml"
  /products/{productId}/parts:
    $ref: "./paths/products{id}Parts.yaml"
  /parts:
    post:
      summary: Creates a new part with the supplied data
      description: ""
      tags:
        - Parts
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                partNumber:
                  type: string
                partNumberExtra:
                  type: string
                partDescription:
                  type: string
                purchasePrice:
                  type: number
                  format: currency
                salePrice:
                  type: number
                  format: currency
                costPrice:
                  type: number
                  format: currency
                eanCode:
                  type: string
              required:
                - partNumber
                - partDescription
            example:
              { "partNumber": "1010/5","partDescription": "wandschouw" }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  status:
                    type: integer
              example:
                {
                  "status": 201,
                  "id": "50001",
                }
        '400':
          description: Bad Request
        '422':
          description: Unprocessable Entity
    get:
      summary: Returns all parts
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            maximum: 1000
            default: 1000
          required: false
          description: The number of items to return
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: Page with the amount of returned items
        - in: query
          name: query
          schema:
            type: string
          required: false
          description: searches for part based on query parameter. Searches only in partNumber
      description: ""
      tags:
        - Parts
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                  parts:
                    properties:
                      partId:
                        type: integer
                      companyId:
                        type: integer
                      partNumber:
                        type: string
                      partNumberExtra:
                        type: string
                      partDescription:
                        type: string
                      purchasePrice:
                        type: number
                      salePrice:
                        type: number
                      effectivePriceDate:
                        type: string
              example:
                {
                  "result": {
                    "count": 2,
                    "parts": [
                      {
                        "partId": 32017869,
                        "companyId": 7378787652899,
                        "partNumber": "09534000",
                        "partNumberExtra": "",
                        "partDescription": "Seitenstein hinten",
                        "purchasePrice": 10.00,
                        "salePrice": 20.00,
                        "effectivePriceDate": ""
                      },
                      {
                        "partId": 20017870,
                        "companyId": 7378787652899,
                        "partNumber": "09534100",
                        "partNumberExtra": "",
                        "partDescription": "Seitenstein vorne",
                        "purchasePrice": 15.00,
                        "salePrice": 30.00,
                        "effectivePriceDate": "14-06-2022"
                      }
                    ]
                  }
                }
  /parts/{partId}:
    get:
      summary: Returns parts information by id
      description: ""
      tags:
        - Parts
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  partId:
                    type: integer
                  companyId:
                    type: integer
                  partNumber:
                    type: string
                  partNumberExtra:
                    type: string
                  partDescription:
                    type: string
                  purchasePrice:
                    type: number
                  salePrice:
                    type: number
                  effectivePriceDate:
                    type: string
              example:
                {
                  "result": {
                    "partId": 32017869,
                    "companyId": 7378787652899,
                    "partNumber": "09534000",
                    "partNumberExtra": "",
                    "partDescription": "Seitenstein hinten",
                    "purchasePrice": 30.00,
                    "salePrice": 60.00,
                    "effectivePriceDate": "14-06-2022"
                  }
                }
    put:
      summary: Update the part with the supplied data
      description: ""
      tags:
        - Parts
      parameters:
        - name: partId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                partNumberExtra:
                  type: string
                partDescription:
                  type: string
                purchasePrice:
                  type: number
                  format: currency
                salePrice:
                  type: number
                  format: currency
                costPrice:
                  type: number
                  format: currency
                eanCode:
                  type: string
            example:
              { "partDescription": "wandschouw","salePrice": 23.20 }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  status:
                    type: integer
              example:
                {
                  "status": 201,
                  "id": "50001",
                }
        '400':
          description: Bad Request
        '422':
          description: Unprocessable Entity
    delete:
      summary: Deletes the part
      description: ""
      tags:
        - Parts
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
  /parts/{partId}/prices:
    post:
      summary: Inserts a new price with an effective from date
      description: "When the effectivePriceDate is equal or lower than today's date the prices are immediately updated."
      tags:
        - Parts
      parameters:
        - name: partId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                purchasePrice:
                  type: number
                  format: currency
                salePrice:
                  type: number
                  format: currency
                costPrice:
                  type: number
                  format: currency
                effectivePriceDate:
                  type: string
                  format: date
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '422':
          description: Unprocessable Entity
  /stock:
    $ref: "./paths/stock.yaml"
  /stock/{stockId}:
    $ref: "./paths/stock{id}.yaml"
  /relations:
    get:
      summary: Returns all relations
      parameters:
        - in: query
          name: start
          schema:
            type: integer
          required: false
          description: Start from this number and return the next 50 items
        - in: query
          name: search
          schema:
            type: string
          required: false
          description: Search parameter that looks for searchName or number
      description: ""
      tags:
        - Relations
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                  result:
                    type: array
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      number:
                        type: string
                      searchName:
                        type: string
                      country:
                        type: string
                      zipcode:
                        type: string
                      streetName:
                        type: string
                      houseNumber:
                        type: string
                      city:
                        type: string
                      phone:
                        type: string
                      email:
                        type: string
                      language:
                        type: string
              example:
                {
                  "result": [
                    {
                      "id": 1,
                      "name": "'t Huys voor Insezo",
                      "number": "123",
                      "searchName": "insezo",
                      "country": "nl",
                      "zipcode": "3355pp",
                      "streetName": "Kattestaart",
                      "houseNumber": "10",
                      "city": "Papendrecht",
                    },
                    {
                      "id": 2,
                      "name": "123 Insezo",
                      "number": "124",
                      "searchName": "insez1",
                      "country": "nl",
                      "zipcode": "3355pp",
                      "streetName": "Kattestaart",
                      "houseNumber": "10",
                      "city": "Papendrecht",
                    }
                  ]
                }
    post:
      summary: Creates a new relation with the supplied data
      description: ""
      tags:
        - Relations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                number:
                  type: string
                language:
                  type: string
                  description: The 2 digit country code (nl, fr)
                country:
                  type: string
                  description: The 2 digit country code (NL, FR)
                zipcode:
                  type: string
                houseNumber:
                  type: string
                streetName:
                  type: string
                city:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                remark:
                  type: string
              required:
                - name
                - number
            example:
              { "name": "Insezo","number": "911" }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
              example:
                {
                  "status": 201,
                }
        '400':
          description: Bad Request
        '409':
          description: Conflict
        '422':
          description: Unprocessable Entity
  /relations/{relationId}:
    get:
      summary: Returns relation from id
      description: ""
      tags:
        - Relations
      parameters:
        - name: relationId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  searchName:
                    type: string
                  city:
                    type: string
                  name:
                    type: string
              example:
                {
                  "result":
                    {
                      "id": 1,
                      "name": "'t Huys voor Insezo",
                      "number": "123",
                      "searchName": "insezo",
                      "country": "nl",
                      "zipcode": "3355pp",
                      "streetName": "Kattestaart",
                      "houseNumber": "10",
                      "city": "Papendrecht",
                    }
                }
    put:
      summary: Updates the relation with the supplied data
      description: ""
      tags:
        - Relations
      parameters:
        - name: relationId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                number:
                  type: string
                language:
                  type: string
                  description: The 2 digit country code (nl, fr)
                country:
                  type: string
                  description: The 2 digit country code (NL, FR)
                zipcode:
                  type: string
                houseNumber:
                  type: string
                streetName:
                  type: string
                city:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                remark:
                  type: string
                block:
                  type: boolean
            example:
              { "zipcode": "3355pp","email": "info@insezo.com" }
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '422':
          description: Unprocessable Entity
  /returns:
    post:
      summary: Creates a new return task with the supplied data
      description: ""
      tags:
        - Returns
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                returnType:
                  type: string
                  enum: [ sda,mda,sdar,mdar,sdad,mdad ]
                salutation:
                  type: integer
                  minimum: 1
                  maximum: 4
                  description: mr/mrs, mr, mrs, company
                firstName:
                  type: string
                  maxLength: 35
                insertion:
                  type: string
                  maxLength: 10
                lastName:
                  type: string
                  maxLength: 35
                companyName:
                  type: string
                  maxLength: 60
                country:
                  type: string
                  minimum: 2
                  maximum: 2
                city:
                  type: string
                  maxLength: 40
                zipcode:
                  type: string
                  maxLength: 10
                streetName:
                  type: string
                  maxLength: 60
                houseNumber:
                  type: string
                  maxLength: 10
                email:
                  type: string
                  maxLength: 60
                mobile:
                  type: string
                  maxLength: 20
                netcode:
                  type: string
                phone:
                  type: string
                  maxLength: 20
                productGroup:
                  type: string
                productNumber:
                  type: string
                serialNumber:
                  type: string
                  maxLength: 40
                purchaseDate:
                  type: string
                  format: date
                complaint:
                  type: string
                  maxLength: 500
                repairAdvice:
                  type: string
                  maxLength: 500
                purchasePlace:
                  type: string
                  maxLength: 40
                warranty:
                  type: integer
                reference:
                  type: array
                  items:
                    type: string
                  maxLength: 60
                  maxItems: 4
                affiliateBrand:
                  type: string
                  maxLength: 20
              required:
                - salutation
                - country
                - zipcode
                - streetName
                - houseNumber
                - city
            example:
              { "salutation": 2,"firstName": "roel","insertion": "","lastName": "aarnoudse","companyName": "Insezo B.V.","country": "nl","language": "nl","zipcode": "3355pp","houseNumber": "10","streetName": "Kattestaart","city": "papendrecht","phone": "0786154678","netcode": "31","mobile": "612345678","email": "info@insezo.com","productNumber": "AF101","purchaseDate": "1-1-2013","warranty": 3,"complaint": "accio","reference": [ "one","two" ] }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  redirectUrl:
                    type: string
                  id:
                    type: string
                  autofill:
                    type: object
                    properties:
                      productGroup:
                        type: string
                      brand:
                        type: number
                  status:
                    type: integer
              example:
                {
                  "status": 201,
                  "id": "rsinse21112019-5ff1a5",
                  "redirectUrl": "https:\/\/app.insezo.com\/rda\/overview?p=rsinse21112019-5ff1a5",
                  "autofill": {
                    "brand": "Insezo",
                    "productGroup": "Afzuigkap"
                  }
                }
        '400':
          description: Bad Request
        '422':
          description: Unprocessable Entity
  /fulfilment:
    post:
      summary: Creates a new fulfilment task with the supplied data
      description: ""
      tags:
        - Fulfilment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                salutation:
                  type: integer
                  minimum: 1
                  maximum: 4
                  description: mr/mrs, mr, mrs, company
                firstName:
                  type: string
                  maxLength: 35
                insertion:
                  type: string
                  maxLength: 10
                lastName:
                  type: string
                  maxLength: 35
                companyName:
                  type: string
                  maxLength: 60
                country:
                  type: string
                  minimum: 2
                  maximum: 2
                city:
                  type: string
                  maxLength: 40
                zipcode:
                  type: string
                  maxLength: 10
                streetName:
                  type: string
                  maxLength: 60
                houseNumber:
                  type: string
                  maxLength: 10
                houseNumberAddition:
                  type: string
                  maxLength: 10
                email:
                  type: string
                  maxLength: 60
                mobile:
                  type: string
                netcode:
                  type: string
                phone:
                  type: string
                brand:
                  type: integer
                  maxLength: 40
                store:
                  type: integer
                  maxLength: 40
                language:
                  type: string
                reference:
                  type: array
                  items:
                    type: string
                  maxLength: 60
                  maxItems: 4
                affiliateBrand:
                  type: string
                  maxLength: 20
                articles:
                  type: array
                  items:
                    type: object
                    properties:
                      brand:
                        type: integer
                      partNumber:
                        type: string
                      amount:
                        type: integer
              required:
                - salutation
                - lastName
                - country
                - zipcode
                - streetName
                - houseNumber
                - city
                - store
                - brand
                - articles
            example:
              { "salutation": 2, "firstName": "roel", "insertion": "", "lastName": "aarnoudse", "companyName": "Insezo B.V.", "country": "NL", "language": "nl", "zipcode": "3355pp", "houseNumber": "10", "streetName": "Kattestaart", "city": "papendrecht", "phone": "0786154678", "brand": 7386787652838, "store": 7384787652814, "netcode": "31", "mobile": "612345678", "email": "info@insezo.com", "reference": [ "one", "two" ], "articles": [ { "brand": 7386787652838, "article": 11277, "amount": 3 } ] }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  redirectUrl:
                    type: string
                  id:
                    type: string
                  autofill:
                    type: object
                    properties:
                      productGroup:
                        type: string
                      brand:
                        type: number
                  status:
                    type: integer
              example:
                {
                  "status": 201,
                  "id": "rsinse21112019-5ff1a5",
                  "redirectUrl": "https:\/\/app.insezo.com\/fulfilment\/overview?p=finse21112019-5ff1a5",
                  "autofill": {
                    "brand": "Insezo",
                    "productGroup": "Afzuigkap"
                  }
                }
        '400':
          description: Bad Request
        '422':
          description: Unprocessable Entity
  /registrations/complaints/{complaintId}:
    get:
      summary: Returns information about the complaint
      description: ""
      tags:
        - Registration - Complaints
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      id:
                        type: string
                      lastName:
                        type: string
                      country:
                        type: string
                      purchaseDate:
                        type: string
                      city:
                        type: string
                      purchasePlace:
                        type: string
                      companyName:
                        type: string
                      houseNumber:
                        type: string
                      language:
                        type: string
                      affiliateBrand:
                        type: string
                      streetName:
                        type: string
                      netcode:
                        type: string
                      brand:
                        type: string
                      email:
                        type: string
                      serialNumber:
                        type: string
                      mobile:
                        type: string
                      number:
                        type: string
                      houseNumberAddition:
                        type: string
                      zipcode:
                        type: string
                      firstName:
                        type: string
                      phone:
                        type: string
                      group:
                        type: string
                      complaint:
                        type: string
                      remark:
                        type: string
                      insertion:
                        type: string
                      salutation:
                        type: integer
              example:
                {
                  "result": {
                    "id": "cinse21112019-gxx123",
                    "status": task_cancel,
                    "salutation": 1,
                    "firstName": "I.",
                    "insertion": "",
                    "lastName": "insezo",
                    "country": "NL",
                    "zipcode": "3355pp",
                    "streetName": "Kattestaart",
                    "houseNumber": "10",
                    "houseNumberAddition": "",
                    "city": "Papendrecht",
                    "phone": "",
                    "netcode": "31",
                    "mobile": "612345678",
                    "email": "info@insezo.com",
                    "brand": "Insezo",
                    "group": "Afzuigkap",
                    "number": "AF101",
                    "purchaseDate": "2019-11-01",
                    "complaint": "",
                    "purchasePlace": "",
                    "language": "NL",
                    "companyName": "",
                    "affiliateBrand": "",
                  }
                }
        '400':
          description: Bad Request
  /registrations/complaints:
    post:
      summary: Creates a new complaint registration with the supplied data
      description: ""
      tags:
        - Registration - Complaints
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                salutation:
                  type: integer
                  minimum: 1
                  maximum: 4
                  description: mr/mrs, mr, mrs, company
                firstName:
                  type: string
                  maxLength: 35
                insertion:
                  type: string
                  maxLength: 10
                lastName:
                  type: string
                  maxLength: 35
                companyName:
                  type: string
                  maxLength: 60
                country:
                  type: string
                  minimum: 2
                  maximum: 2
                city:
                  type: string
                  maxLength: 40
                zipcode:
                  type: string
                  maxLength: 10
                streetName:
                  type: string
                  maxLength: 60
                houseNumber:
                  type: string
                  maxLength: 10
                email:
                  type: string
                  maxLength: 60
                mobile:
                  type: string
                  maxLength: 20
                netcode:
                  type: string
                phone:
                  type: string
                  maxLength: 20
                brand:
                  type: string
                  description: call /me api for partnersbrand ID's
                group:
                  type: string
                number:
                  type: string
                purchaseDate:
                  type: string
                  format: date
                purchasePlace:
                  type: string
                  maxLength: 40
                remark:
                  type: string
                  maxLength: 500
                complaint:
                  type: string
                  maxLength: 1500
                language:
                  type: string
                affiliateBrand:
                  type: string
                  maxLength: 20
              required:
                - salutation
                - country
                - zipcode
                - brand
                - streetName
                - houseNumber
                - city
            example:
              { "salutation": 2,"firstName": "roel","insertion": "","lastName": "aarnoudse","companyName": "Insezo B.V.","country": "nl","language": "nl","zipcode": "3355pp","houseNumber": "10","streetName": "Kattestaart","city": "papendrecht","phone": "0786154678","netcode": "31","mobile": "612345678","email": "info@insezo.com","number": "AF101","remark": "Box is damaged" }
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  redirectUrl:
                    type: string
                  id:
                    type: string
                  autofill:
                    type: object
                    properties:
                      productGroup:
                        type: string
                      brand:
                        type: number
                  status:
                    type: integer
              example:
                {
                  "status": 201,
                  "id": "cinse21112019-5ff1a5",
                  "redirectUrl": "https:\/\/app.insezo.com\/complaints\/modify?p=finse21112019-5ff1a5",
                  "autofill": {
                    "brand": "Insezo",
                  }
                }
  /registrations/products/{resourceId}:
    get:
      summary: Returns information about the product registration
      description: ""
      tags:
        - Registration - Products
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      id:
                        type: string
                      customerName:
                        type: string
                      country:
                        type: string
                      zipcode:
                        type: string
                      streetName:
                        type: string
                      houseNumber:
                        type: string
                      houseNumberAddition:
                        type: string
                      city:
                        type: string
                      phone:
                        type: string
                      netcode:
                        type: string
                      mobile:
                        type: string
                      email:
                        type: string
                      brand:
                        type: string
                      productGroup:
                        type: string
                      productNumber:
                        type: string
                      purchaseDate:
                        type: string
                      warranty:
                        type: string
                      serialNumber:
                        type: string
                      purchasePlace:
                        type: string
                      language:
                        type: string
                      companyName:
                        type: string
                      affiliateBrand:
                        type: string
                      permission:
                        type: boolean
              example:
                {
                  "result": {
                    "id": "rinse042023-79aa9b",
                    "customerName": "Roel aarnoudse",
                    "country": "NL",
                    "zipcode": "3355pp",
                    "streetName": "Kattestaart",
                    "houseNumber": "10",
                    "houseNumberAddition": "",
                    "city": "Papendrecht",
                    "phone": "",
                    "netcode": "31",
                    "mobile": "",
                    "email": "",
                    "brand": "Novy BE",
                    "productGroup": "Kookplaat",
                    "productNumber": "1003",
                    "purchaseDate": "01-01-2022",
                    "warranty": 42,
                    "serialNumber": "123456",
                    "purchasePlace": "",
                    "language": "",
                    "companyName": "",
                    "affiliateBrand": 0,
                    "permission": 0
                  }
                }
        '400':
          description: Bad Request
  /registrations/products:
    post:
      summary: Creates a new product registration with the supplied data
      description: ""
      tags:
        - Registration - Products
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                salutation:
                  type: integer
                  minimum: 1
                  maximum: 4
                  description: mr/mrs, mr, mrs, company
                customerName:
                  type: string
                  maxLength: 60
                companyName:
                  type: string
                  maxLength: 60
                country:
                  type: string
                  minimum: 2
                  maximum: 2
                city:
                  type: string
                  maxLength: 40
                zipcode:
                  type: string
                  maxLength: 10
                streetName:
                  type: string
                  maxLength: 60
                houseNumber:
                  type: string
                  maxLength: 10
                email:
                  type: string
                  maxLength: 60
                mobile:
                  type: string
                  maxLength: 20
                netcode:
                  type: string
                phone:
                  type: string
                  maxLength: 20
                brand:
                  type: string
                  description: call /me api for partnersbrand ID's
                number:
                  type: string
                purchaseDate:
                  type: string
                  format: date
                purchasePlace:
                  type: string
                  maxLength: 40
                language:
                  type: string
                warranty:
                  type: integer
                permission:
                  type: boolean
                affiliateBrand:
                  type: string
                  maxLength: 20
              required:
                - salutation
                - country
                - zipcode
                - brand
                - streetName
                - houseNumber
                - city
            example:
              { "salutation": 2,"firstName": "roel","insertion": "",
                "lastName": "aarnoudse","companyName": "Insezo B.V.","country": "nl","language": "nl",
                "zipcode": "3355pp","houseNumber": "10","streetName": "Kattestaart","city": "papendrecht",
                "phone": "0786154678","netcode": "31","mobile": "612345678","purchaseDate": "02-03-2022",
                "email": "info@insezo.com","number": "AF101","permission": true }
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  redirectUrl:
                    type: string
                  id:
                    type: string
                  autofill:
                    type: object
                    properties:
                      productGroup:
                        type: string
                      brand:
                        type: number
                  status:
                    type: integer
              example:
                {
                  "status": 201,
                  "id": "cinse21112019-5ff1a5",
                  "redirectUrl": "https:\/\/app.insezo.com\/complaints\/modify?p=finse21112019-5ff1a5",
                  "autofill": {
                    "brand": "Insezo",
                  }
                }
  /bulk/tasks:
    post:
      summary: Bulk insert for task resources
      description: "Max 100 resources at a time"
      tags:
        - Bulk
      parameters:
        - name: skipDuplicate
          in: query
          schema:
            type: string
            enum: [ "address" ]
          description: Skips duplicates based on parameter (already existing address)
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  orderType:
                    type: string
                    enum: [ service,building,installation,custom,maintenance,exchange ]
                    default: service
                  salutation:
                    type: integer
                    minimum: 1
                    maximum: 4
                    description: mr/mrs, mr, mrs, company
                  language:
                    type: string
                  firstName:
                    type: string
                    maxLength: 35
                  insertion:
                    type: string
                    maxLength: 10
                  lastName:
                    type: string
                    maxLength: 35
                  companyName:
                    type: string
                    maxLength: 60
                  country:
                    type: string
                    minimum: 2
                    maximum: 2
                  city:
                    type: string
                    maxLength: 40
                  zipcode:
                    type: string
                    maxLength: 10
                  streetName:
                    type: string
                    maxLength: 60
                  houseNumber:
                    type: string
                    maxLength: 10
                  email:
                    type: string
                    maxLength: 60
                  mobile:
                    type: string
                    maxLength: 20
                  netcode:
                    type: string
                  phone:
                    type: string
                    maxLength: 20
                  contractor:
                    type: integer
                    description: consult "/me/servicepartners" endpoint for allowed contractors
                  brand:
                    type: integer
                  productGroup:
                    type: string
                  productNumber:
                    type: string
                  purchaseDate:
                    type: string
                    format: date
                  complaint:
                    type: string
                    maxLength: 1500
                  repairAdvice:
                    type: string
                    maxLength: 500
                  warranty:
                    type: integer
                  relation:
                    type: string
                    format: search number
                  reference:
                    type: array
                    items:
                      type: string
                    maxLength: 60
                    maxItems: 4
                required:
                  - salutation
                  - country
                  - zipcode
                  - streetName
                  - houseNumber
                  - city
              example:
                [ { "salutation": 2,"firstName": "roel","insertion": "","lastName": "aarnoudse","companyName": "Insezo B.V.","country": "nl","language": "nl","zipcode": "3355pp","houseNumber": "10","streetName": "Kattestaart","city": "papendrecht","phone": "0786154678","netcode": "31","mobile": "612345678","email": "info@insezo.com","productNumber": "AF101","purchaseDate": "1-1-2013","warranty": 3,"complaint": "accio","reference": [ "one","two" ] },{ "salutation": 2,"firstName": "roel","insertion": "","lastName": "aarnoudse","companyName": "Insezo B.V.","country": "nl","language": "nl","zipcode": "3355pp","houseNumber": "10","streetName": "Kattestaart","city": "papendrecht","phone": "0786154678","netcode": "31","mobile": "612345678","email": "info@insezo.com","productNumber": "AF101","purchaseDate": "1-1-2013","warranty": 3,"complaint": "accio","reference": [ "one","two" ] } ]
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    redirectUrl:
                      type: string
                    id:
                      type: string
                    autofill:
                      type: object
                      properties:
                        productGroup:
                          type: string
                        brand:
                          type: number
                    status:
                      type: integer
              example:
                {
                  "status": 200,
                  "result": [
                    {
                      "status": 422,
                      "error": {
                        "message": [
                          "Missing parameters: city"
                        ]
                      },
                    },
                    {
                      "status": 201,
                      "id": "inse21112019-d5e617",
                      "redirectUrl": "https:\/\/app.insezo.com\/tasks\/overview?p=inse21112019-d5e617",
                      "autofill": {
                        "brand": "Insezo",
                        "productGroup": "Afzuigkap"
                      }
                    }
                  ]
                }
  /reviews:
    get:
      summary: Returns reviews
      description: ""
      tags:
        - Reviews
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                  result:
                    type: array
              example:
                {
                  "count": 2,
                  "result": [
                    {
                      "id": "inse19092022-7b7bfa",
                      "sign_up": 1,
                      "visit": 2,
                      "technician": 3,
                      "repair": 4,
                      "nps": 9,
                      "remark": ""
                    },
                    {
                      "id": "inse19092022-012345",
                      "sign_up": 1,
                      "visit": 2,
                      "technician": 3,
                      "repair": 2,
                      "nps": 5,
                      "remark": "Took long"
                    }
                  ]
                }
        '400':
          description: Bad Request
  /reviews/{resourceId}:
    get:
      summary: Returns information about the task review
      description: ""
      tags:
        - Reviews
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      id:
                        type: string
                      visit:
                        type: string
                      technician:
                        type: string
                      repair:
                        type: string
                      nps:
                        type: string
                      remark:
                        type: string
              example:
                {
                  "result": {
                    "id": "inse19092022-7b7bfa",
                    "sign_up": 1,
                    "visit": 2,
                    "technician": 3,
                    "repair": 4,
                    "nps": 9,
                    "remark": ""
                  }
                }
        '400':
          description: Bad Request
  /me/partners/service:
    get:
      summary: Returns all service partners that are affiliated with a production company
      description: ""
      tags:
        - Me
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
              example:
                {
                  "result": [
                    { "id": 1000000000003,
                      "name": "Insezo Service"
                    },
                    { "id": 1000000000004,
                      "name": "Insezo Service You"
                    }
                  ]
                }
  /me/partners/brands:
    get:
      summary: Returns all brands that are affiliated with a service company
      description: ""
      tags:
        - Me
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
              example:
                {
                  "result": [
                    { "id": 1000000000001,
                      "name": "Insezo Dishwashers"
                    },
                    { "id": 1000000000002,
                      "name": "Insezo Ovens"
                    }
                  ]
                }
  /me/partners/technicians:
    get:
      summary: Returns all technician companies that are affiliated
      description: ""
      tags:
        - Me
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
              example:
                {
                  "result": [
                    { "id": 1000000000001,
                      "name": "Insezo technician"
                    },
                    { "id": 1000000000002,
                      "name": "Jan Modaal monteur"
                    }
                  ]
                }
  /me/affiliatebrands:
    get:
      summary: Returns all affiliate brand for production companies
      description: ""
      tags:
        - Me
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
              example:
                {
                  "result": [
                    { "id": 23,
                      "name": "Inseza"
                    },
                    { "id": 14,
                      "name": "Inseba"
                    }
                  ]
                }
  /webhooks:
    get:
      summary: Returns all affiliate webhooks
      description: ""
      tags:
        - Webhooks
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: integer
                    name:
                      type: string
                    type:
                      type: string
                      enum: [ create, update-phase, update-data, finish ]
                    deliveryUrl:
                      type: string
                    creation:
                      type: string
              example:
                {
                  "result": [
                    {
                      "key": 23,
                      "name": "Inseza",
                      "type": "update-phase",
                      "deliveryUrl": "http:\/\/localhost\/insezo\/rest\/webhooks\/test",
                      "creation": "2024-04-10 16:13:32"
                    },
                    { "key": 14,
                      "name": "Inseba",
                      "type": "create",
                      "deliveryUrl": "http:\/\/localhost\/insezo\/rest\/webhooks\/test",
                      "creation": "2024-03-11 13:40:57"
                    }
                  ]
                }
    post:
      summary: Creates a new webhook
      description: ""
      tags:
        - Webhooks
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  maxLength: 40
                  description: "Name must be unique"
                  required: true
                type:
                  type: string
                  enum: [ create, update-phase, update-data, finish ]
                  required: true
                deliveryUrl:
                  type: string
                  maxLength: 2083
                  required: true
                secretKey:
                  type: string
                  maxLength: 32
                  required: false
              required:
                - name
                - type
                - deliveryUrl
            example:
              { "name": "Webhook naar home pagina", "type": "update-phase", "deliveryUrl": "http:\/\/localhost\/insezo\/rest\/webhooks\/test" }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  autofill:
                    type: object
                    properties:
                      secretKey:
                        type: string
                  status:
                    type: integer
              example:
                {
                  "status": 201,
                  "autofill": {
                    "secreKey": "JFhndfud7rfgGYUs8790wdfJkdfI8054",
                  }
                }
        '400':
          description: Bad Request
        '422':
          description: Unprocessable Entity
  /webhooks/{webhookId}:
    get:
      summary: Returns information about the webhook
      description: ""
      tags:
        - Webhooks
      parameters:
        - name: webhookId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: integer
                    name:
                      type: string
                    type:
                      type: string
                      enum: [ create, update-phase, update-data, finish ]
                    deliveryUrl:
                      type: string
                    active:
                      type: boolean
                    creation:
                      type: string
              example:
                {
                  "result": [
                    {
                      "key": 27,
                      "name": "Inseza",
                      "type": "finish",
                      "deliveryUrl": "http:\/\/localhost\/insezo\/rest\/webhooks\/test",
                      "active": 1,
                      "creation": "2024-04-10 14:13:32"
                    }
                  ]
                }
    put:
      summary: Updates information about the webhook
      description: ""
      tags:
        - Webhooks
      parameters:
        - name: webhookId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  maxLength: 40
                  description: Name must be unique
                type:
                  type: string
                  enum: [ create, update-phase, update-data, finish ]
                deliveryUrl:
                  type: string
                  maxLength: 2083
                active:
                  type: boolean
                secretKey:
                  type: string
                  maxLength: 32
            example:
              { "name": "Webhook naar home pagina", "type": "update-phase", "deliveryUrl": "http:\/\/localhost\/insezo\/rest\/webhooks\/test" }
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
    delete:
      summary: Deletes the webhook
      description: ""
      tags:
        - Webhooks
      parameters:
        - name: webhookId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          description: Error deleting
  /webhooks/{webhookId}/logs:
    get:
      summary: Returns all logs of given webhook
      description: ""
      tags:
        - Webhooks
      parameters:
        - name: webhookId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    taskId:
                      type: string
                    type:
                      type: string
                      enum: [ create, update-phase, update-data, finish ]
                    statusCode:
                      type: integer
                    created:
                      type: string
                    finished:
                      type: string
              example:
                {
                  "count": 3,
                  "start": 26,
                  "result": [
                    {
                      "id": 26,
                      "taskId": "nvnl01072024-c8309c",
                      "type": "create",
                      "statusCode": 401,
                      "created": "2024-07-01 14:49:28",
                      "finished": "2024-07-01 14:49:29"
                    },
                    {
                      "id": 27,
                      "taskId": "nvnl01072024-76bbea",
                      "type": "create",
                      "statusCode": 401,
                      "created": "2024-07-01 14:50:02",
                      "finished": "2024-07-01 14:50:02"
                    },
                    {
                      "id": 28,
                      "taskId": "nvnl01072024-4c2fd0",
                      "type": "create",
                      "statusCode": 401,
                      "created": "2024-07-01 14:50:02",
                      "finished": "2024-07-01 14:50:02"
                    },
                  ]
                }
        '400':
          description: Bad request
        '422':
          description: unprocessable entity
  /meta/tasks/phases:
    $ref: "./paths/metaTasksPhases.yaml"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: KEY